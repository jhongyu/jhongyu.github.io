<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>/2022/04/10/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<span id="more"></span>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>hexo+next+github一把梭</title>
    <url>/2020/04/30/hexo%E5%8D%9A%E5%AE%A2%E9%83%A8%E7%BD%B2/</url>
    <content><![CDATA[<p>整了两天终于用Github actions完成了博客在Github上的自动部署，故写作此文记录一下操作。</p>
<span id="more"></span>

<h2 id="前提条件"><a href="#前提条件" class="headerlink" title="前提条件"></a>前提条件</h2><p>安装hexo的前提是你的电脑中已安装过<a href="nodejs.org">Node.js</a>和<a href="git-scm.com">Git</a>，若你安装过上述软件，即可跳过此步骤。</p>
<ol>
<li>安装Git<ul>
<li>Windows系统：直接下载并安装<a href="https://git-scm.com/download/win">git</a>，具体细节可在其<a href="https://git-scm.com/">官网</a>查询</li>
<li>Linux(Ubuntu,Debian)：使用<code>sudo apt-get install git-core</code>命令安装</li>
</ul>
</li>
<li>安装Node.js<br> 可直接进其<a href="nodejs.org">官网</a>查看各平台安装方法，在此不多做介绍。</li>
</ol>
<h2 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h2><p>安装完上述软件后，即可使用npm安装Hexo。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure>

<p><strong>PS：国内由于众所周知的原因，使用npm的官方镜像较慢，可以使用淘宝的npm镜像替代</strong><br>使用下列命令安装淘宝的cnpm替代npm后即可使用cnpm命令安装模块：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure>


<p>具体信息可查看<a href="https://developer.aliyun.com/mirror/NPM?from=tnpm">淘宝官方网站</a></p>
<p>安装以后，可以使用以下两种方式执行Hexo：</p>
<ol>
<li><code>npx hexo &lt;command&gt;</code></li>
<li>将Hexo所在的目录下的<code>node_modules</code>的路径添加到环境变量之中即可直接使用<code>hexo &lt;command&gt;</code>(鉴于此种方法会污染环境变量，故不推荐使用，可在Hexo所在目录下的<code>package.json</code>文件中添加脚本执行hexo命令)：<br> <code>echo &#39;PATH=&quot;$PATH:./node_modules/.bin&quot;&#39; &gt;&gt; ~/.profile</code></li>
</ol>
<h2 id="使用Hexo建站"><a href="#使用Hexo建站" class="headerlink" title="使用Hexo建站"></a>使用Hexo建站</h2><p>安装Hexo完成后，可在选定的文件夹下执行以下命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo init &lt;folder&gt;</span><br><span class="line">$ <span class="built_in">cd</span> &lt;folder&gt;</span><br><span class="line">$ npm install</span><br></pre></td></tr></table></figure>

<p>完成后新建的文件夹的结构如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.</span><br><span class="line">├── _config.yml</span><br><span class="line">├── package.json</span><br><span class="line">├── scaffolds</span><br><span class="line">├── source</span><br><span class="line">|   ├── _drafts</span><br><span class="line">|   └── _posts</span><br><span class="line">└── themes</span><br></pre></td></tr></table></figure>

<p>上述目录中themes所在文件夹即是存放主题文件的地方，此时该文件夹中应该包含了Hexo的初始主题，由于本文主要介绍Next主题的安装及配置，故不对Hexo做过多介绍，若想了解具体信息，可查看<a href="https://hexo.io/zh-cn/docs/">官方文档</a></p>
<h2 id="安装Next主题"><a href="#安装Next主题" class="headerlink" title="安装Next主题"></a>安装Next主题</h2><p>Next主题是Hexo生态中一款使用人数较多的主题，其具有完善的文档及社区，且在GitHub上开源，具体信息可查看其<a href="https://theme-next.org/docs/getting-started/">文档</a>或<a href="https://github.com/theme-next/hexo-theme-next">Github仓库</a></p>
<p>下面介绍Next的安装方式：</p>
<div class="tabs" id="tab-one"><ul class="nav-tabs"><li class="tab active"><a href="#tab-one-1"><i class="fa fa-text-width"></i>最新版本</a></li><li class="tab"><a href="#tab-one-2"><i class="fa fa-text-width"></i>稳定版本</a></li></ul><div class="tab-content"><div class="tab-pane active" id="tab-one-1"><p>利用Git直接clone其仓库：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> hexo</span><br><span class="line">$ git <span class="built_in">clone</span> https://github.com/theme-next/hexo-theme-next  themes/next</span><br></pre></td></tr></table></figure></div><div class="tab-pane" id="tab-one-2"><p>在Next仓库的<a href="https://github.com/theme-next/hexo-theme-next/releases">Release Page</a>界面选择最新的stable版本下载，下载完成后解压放在上面生成的themes文件下。</p></div></div></div>

<p>完成上述操作后，接下来需要在Hexo的配置文件(即<code>_config.yml</code>文件)中将主题设置为next</p>
<figure class="highlight yml"><figcaption><span>hexo/_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">theme:</span> <span class="string">next</span></span><br></pre></td></tr></table></figure>

<p>设置完之后可以运行<code>hexo s --debug</code>命令启动hexo，访问默认地址<code>http://localhost:4000/</code>查看是否正常工作。此时展示的是Next的默认配置，若想更改配置，可根据其<a href="https://theme-next.org/docs/getting-started/">文档</a>进行配置。</p>
<h2 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h2><p>完成Hexo和Next的安装之后，接下来就是将其部署到Github上。该步骤有两种方式实现，第一种为一键式部署，第二种为利用CI(持续集成)服务部署，接下来分别介绍这两种方式。<br><strong>由于两种方式都是将网站部署到Github Pages上，故需要提前注册Github账户并且新建一个名称为<code>用户名.github.io</code>的仓库。</strong></p>
<div class="tabs" id="tab-two"><ul class="nav-tabs"><li class="tab active"><a href="#tab-two-1"><i class="fa fa-text-width"></i>一键式部署</a></li><li class="tab"><a href="#tab-two-2"><i class="fa fa-text-width"></i>持续集成方式</a></li></ul><div class="tab-content"><div class="tab-pane active" id="tab-two-1"><ol>
<li>安装hexo-deployer-git：<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure></li>
<li>在<code>_config.yml</code>文件中修改以下配置：<figure class="highlight yml"><figcaption><span>hexo/_config.yml</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">    <span class="attr">repo:</span> <span class="string">//仓库地址</span></span><br><span class="line">    <span class="attr">branch:</span> <span class="string">//分支</span></span><br><span class="line">    <span class="attr">message:</span> <span class="string">//提交信息(可选)</span></span><br></pre></td></tr></table></figure></li>
<li>执行<code>hexo clean &amp;&amp; hexo deploy</code>命令生成站点文件并推送至远程库</li>
<li>登入GIthub，在推送的仓库中将默认分支设置为<code>_config.yml</code>文件中配置的分支名称。之后应该就可以在Github Pages的页面看到所生成的页面了</li>
</ol></div><div class="tab-pane" id="tab-two-2"><p><em>Hexo和Next的官方文档中使用的CI工具均为Travis CI，但我尝试后均未成功，故选择了Github提供的Github Actions服务</em></p>
<ol>
<li>使用<code>git init</code>命令将hexo所在目录初始化为一个本地仓库。<blockquote>
<p>👉注意：该步骤需要注意的一点是将网站部署到Github Page上时网站文件需要位于master分支上，而此时本地目录中的文件不是最终生成的网站文件，故在用git初始化本地仓库后需要使用<code>git checkout -b 分支名</code>命令新建并切换至新分支(如新建source分支，则命令为<code>git checkout -b source</code>)。</p>
</blockquote>
</li>
<li>将目录内未被忽略的文件提交至仓库<blockquote>
<p>👉注意：如果安装的Next主题为最新版本(即使用<code>git clone</code>命令克隆的仓库)，不建议将其直接推送到远程仓库，可以使用<code>git submodule add</code>命令将其作为该仓库的子模块。</p>
</blockquote>
</li>
<li>在Github上新建一个名称为<code>用户名.github.io</code>的仓库，并按照其指示将本地代码推送至远程仓库。</li>
<li>点击仓库中的Actions按钮新建一个Github Actions，此时Github会自动建立一个YAML格式的配置文件，在其中输入以下内容：<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">Deploy</span></span><br><span class="line"></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line">    <span class="attr">push:</span></span><br><span class="line">     <span class="attr">branches:</span> [<span class="string">source</span>]</span><br><span class="line"></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">hexo-deploy:</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">deploy</span> <span class="string">blog.</span></span><br><span class="line">    <span class="attr">env:</span></span><br><span class="line">      <span class="attr">TZ:</span> <span class="string">Asia/Shanghai</span></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Checkout</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/checkout@v2</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">submodules:</span> <span class="literal">true</span> <span class="comment"># Checkout private submodules(themes or something else).</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Use</span> <span class="string">Node.js</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/setup-node@v1</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">node-version:</span> <span class="string">&#x27;12.x&#x27;</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Install</span> <span class="string">dependencies</span> <span class="string">&amp;</span> <span class="string">Generate</span> <span class="string">static</span> <span class="string">files</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">          node -v</span></span><br><span class="line"><span class="string">          npm install -g hexo-cli</span></span><br><span class="line"><span class="string">          npm run build</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">      <span class="comment"># Deploy hexo blog website.</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Deploy</span></span><br><span class="line">        <span class="attr">env:</span></span><br><span class="line">          <span class="attr">GIT_NAME:</span> <span class="string">jhongyu</span></span><br><span class="line">          <span class="attr">GIT_EMAIL:</span> <span class="string">$</span></span><br><span class="line">          <span class="attr">REPO:</span> <span class="string">github.com/jhongyu/jhongyu.github.io.git</span></span><br><span class="line">          <span class="attr">GH_TOKEN:</span> <span class="string">$</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">          cd ./public &amp;&amp; git init &amp;&amp; git add .</span></span><br><span class="line"><span class="string">          git config --global user.name $GIT_NAME</span></span><br><span class="line"><span class="string">          git config --global user.email $GIT_EMAIL</span></span><br><span class="line"><span class="string">          git commit -m &quot;Site deployed by GitHub Actions&quot;</span></span><br><span class="line"><span class="string">          git push --force --quiet &quot;https://$GH_TOKEN@$REPO&quot; master:master</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">      <span class="comment"># Use the output from the `deploy` step(use for test action)</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Get</span> <span class="string">the</span> <span class="string">output</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">          echo &quot;$&quot;</span></span><br><span class="line"><span class="string"></span></span><br></pre></td></tr></table></figure></li>
</ol>
<p><strong>PS：由于Hexo模板无法渲染Cache部分，故上面的命令缺失了Cache部分，具体可参见我的<a href="https://github.com/jhongyu/jhongyu.github.io/blob/source/.github/workflows/develop.yml">仓库</a>中的文件，或查看Github的官方<a href="https://github.com/actions/cache">actions&#x2F;cache仓库</a></strong><br>5. 之后在本地写完博客推送之后Github Actions便会自动运行将生成的网站文件提交到master分支上。</p></div></div></div>
]]></content>
      <categories>
        <category>博客</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Next</tag>
        <tag>Github</tag>
      </tags>
  </entry>
</search>
